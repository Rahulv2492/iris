/* @description Generates styles for the ButtonFileUpload component */
@import '../globals/sass/helpers-all';
$Button_icon-size-large: rem-calc(18);
$Button_icon-size-medium: rem-calc(16);
$Button_icon-size-small: rem-calc(14);
$Button_icon-size-xSmall: rem-calc(10);

@mixin autoWidthSettings() {
    width: auto;

    &.autoMarginsHorizontal {
        margin-right: rem-calc(8);

        &:last-of-type {
            margin-right: 0;
        }
    }
}

@mixin outlineButton() {
    background-color: $Button_transparent_for_animation;

    letter-spacing: 0.25px;
}

.Button {
    display: inline-flex;

    position: relative;

    width: 100%;
    margin: 0;

    font-family: $FontFamily;
    font-weight: 700;

    border-width: rem-calc(1);
    border-style: solid;
    border-radius: rem-calc($g-radius);

    transition: all #{$iris_transition-base};
    text-align: center;
    vertical-align: middle;
    letter-spacing: 0.1px;

    appearance: none;
    align-items: center;
    justify-content: center;
    -webkit-font-smoothing: antialiased;

    &:hover {
        cursor: pointer;
    }

    &:active {
        outline: 0;

        transform: scale(0.98);
    }
}

//-------------------------  autoMargins

.autoMarginsVertical {
    margin: 0 0 rem-calc(8) 0;

    &:first-of-type {
        margin-right: 0;
    }
}

.buttonLabel {
    display: inline-flex;

    width: 100%;

    align-items: center;
    justify-content: center;
}

.autoWidth_xs {
    @include autoWidthSettings();
}

//Todo: replace with shared media queries
@include mq(sm) {
    .autoWidth_sm {
        @include autoWidthSettings();
    }
}

@include mq(md) {
    .autoWidth_md {
        @include autoWidthSettings();
    }
}

@include mq(lg) {
    .autoWidth_lg {
        @include autoWidthSettings();
    }
}

//-------------------------  button sizes
.xs {
    min-width: rem-calc(48);
    min-height: rem-calc(24);
    padding: 0 0.375rem;

    font-size: rem-calc(12);
    line-height: 1.9;

    border-radius: rem-calc($g-radius-sm);
}

.sm {
    min-width: rem-calc(68);
    min-height: rem-calc(30);
    padding: 0 rem-calc(10);

    font-size: rem-calc(14);
    line-height: calculateLineHeightTarget(14, 30);
}

.md {
    min-width: rem-calc(84);
    min-height: rem-calc(38);
    padding: 0 rem-calc(16);

    font-size: rem-calc(14);
    line-height: calculateLineHeightTarget(14, 38);
}

.lg {
    min-width: rem-calc(112);
    min-height: rem-calc(48);
    padding: 0 rem-calc(24);

    font-size: rem-calc(16);
    line-height: calculateLineHeightTarget(16, 46);
}

//-------------------------  button types

.primary,
.primaryOutline:hover {
    color: $Button_primary-text-color;
    border-color: $Button_primary-bg-color;
    background-color: $Button_primary-bg-color;
}

.primaryTextOnly {
    color: $Button_primary-bg-color;
    border-color: $Button_transparent_for_animation;
    background: $Button_transparent_for_animation;
}

.primary:hover,
.primaryTextOnly:hover {
    color: $Button_primary-text-color;
    border-color: $Button_primary-bg-color_hover;
    background-color: $Button_primary-bg-color_hover;
}

.primary:active,
.primaryOutline:active {
    background-color: darken($Button_primary-bg-color_hover, 10%);
}

.primaryOutline {
    @include outlineButton;

    color: $Button_primary-bg-color;
    border-color: $Button_primary-bg-color;
}



.alternative,
.alternativeOutline:hover {
    color: $Button_alternative-text-color;
    border-color: $Button_alternative-bg-color;
    background-color: $Button_alternative-bg-color;
}

.alternative:hover {
    border-color: $Button_alternative-bg-color_hover;
    background-color: $Button_alternative-bg-color_hover;
}

.alternative:active,
.alternativeOutline:active {
    background-color: darken($Button_alternative-bg-color_hover, 6%);
}



.secondary {
    color: $Button_secondary-text-color;
    border-color: $Button_secondary-bg-color;
    background-color: $Button_secondary-bg-color;

    letter-spacing: 0.25px;
}

.secondaryOutline {
    @include outlineButton;

    color: $Button_secondary-outline-text-color;
    border-color: $Button_secondary-outline-text-color;

    letter-spacing: 0.25px;
}
.secondaryTextOnly {
    color: $Button_secondary-text-color;
    border-color: $Button_transparent_for_animation;
    background: $Button_transparent_for_animation;
}

.secondary:hover,
.secondaryOutline:hover,
.secondaryTextOnly:hover {
    color: $Button_secondary-text-color;
    border-color: $Button_secondary-bg-color_hover;
    background-color: $Button_secondary-bg-color_hover;
}

.secondary:active
.secondaryOutline:active {
    background-color: darken($Button_secondary-bg-color_hover, 6%);
}

.alternativeOutline {
    @include outlineButton;

    color: $Button_secondary-text-color;
    border-color: $Button_secondary-text-color;
}



.warning,
.warningOutline:hover {
    color: $Button_warning-text-color;
    border-color: $Button_warning-bg-color;
    background-color: $Button_warning-bg-color;
}

.warning:hover {
    border-color: $Button_warning-bg-color_hover;
    background-color: $Button_warning-bg-color_hover;
}

.warning:active,
.warningOutline:active {
    background-color: darken($Button_warning-bg-color_hover, 10%);
}


.warningOutline {
    @include outlineButton;

    color: $Button_warning-bg-color;
    border-color: $Button_warning-bg-color;
}



.success,
.successOutline:hover {
    color: $Button_success-text-color;
    border-color: $Button_success-bg-color;
    background-color: $Button_success-bg-color;
}

.success:hover {
    border-color: $Button_success-bg-color_hover;
    background-color: $Button_success-bg-color_hover;
}

.success:active,
.successOutline:active {
    background-color: darken($Button_success-bg-color_hover, 10%);
}


.successOutline {
    @include outlineButton;

    color: $Button_success-bg-color;
    border-color: $Button_success-bg-color;
}

.lightTransparent {
    color: $White;
    border-color: $Button_transparent_for_animation;
    background-color: rgba(255,255,255,0.3);

    &:hover {
        background-color: rgba(255,255,255,0.5);
    }

    &:active {
        background-color: rgba(255,255,255,0.7);
    }
}

.lightTextOnly {
    color: $White;
    border-color: $Button_transparent_for_animation;
    background-color: $Button_transparent_for_animation;

    &:hover {
        background-color: rgba(255,255,255,0.5);
    }
}

//-------------------------  button icons

.Icon {
    display: inline-flex;

    align-items: center;

    svg * {
        fill: currentColor;
    }
}

.Icon_beforeLabel {
    margin-right: rem-calc(4);
}

.Icon_afterLabel {
    margin-left: rem-calc(4);
}


.xs {
    .Icon svg {
        width: $Button_icon-size-xSmall;
        height: $Button_icon-size-xSmall;
    }
}

.sm {
    .Icon svg {
        width: $Button_icon-size-small;
        height: $Button_icon-size-small;
    }
}

.md {
    .Icon svg {
        width: $Button_icon-size-medium;
        height: $Button_icon-size-medium;
    }
}

.lg {
    .Icon svg {
        width: $Button_icon-size-large;
        height: $Button_icon-size-large;
    }

    .Icon_beforeLabel {
        margin-right: rem-calc(8);
    }

    .Icon_afterLabel {
        margin-left: rem-calc(8);
    }
}


// All Disable Buttons other than Primary are the same and override any other applied styles

.Button:disabled {
    cursor: not-allowed;
    &:active {
        outline: 0;

        transform: scale(1);
    }
}

.Button:not(.primary):disabled {
    color: #D0D8DB;
    border-color: $Porcelain;
    background-color: $Porcelain;
}

.Button.primary:disabled,
.Button.primary:disabled:hover {
    color: rgba($White, 0.7);
    border-color: transparent;
    background-color: rgba($VimeoBlue, 0.4);
}
