/* @description Generates styles for the Col component */
@import '../../globals/sass/helpers-all';

//   Module Styles
.GridCol {
    padding-left: rem-calc($grid-gutter-width);
    padding-right: rem-calc($grid-gutter-width);

    &.formColumn {
        padding-left: rem-calc($grid-gutter-width-form);
        padding-right: rem-calc($grid-gutter-width-form);
    }
}   

@mixin spans($count) {
    @for $i from 1 through $count {
        $spanOffsetPercentage: $i/$count * 100%;
        $spanName: -#{$i};
        &#{$spanName} {
            flex: 1 1 $spanOffsetPercentage;
            max-width: $spanOffsetPercentage;
        }
    }
}

//update $containerWidth to $gridWidth?
@mixin fixedSpans($containerWidth, $count) {
    @for $i from 1 through $count {
        &-#{$i}-fixed {
            flex: 1 1 rem-calc((($i/$count)*$containerWidth));
            max-width: rem-calc((($i/$count)*$containerWidth));
        }
    }
}

@mixin offset($count, $offsetDirection) {
    @for $i from 1 through $count {
        &-#{$i} {
            margin-#{$offsetDirection}:  100% * ($i/24);
        }
    }
}

@mixin fluid() {
    &-0 {
        flex: 1 0 0;
    }
}

.xs-span {
  @include spans($grid-column-count);
  @include fixedSpans($screen-xs, $grid-column-count);

  @include fluid();
}

// Span breakpoints
@include mq(sm) {
    .sm-span {
        @include spans($grid-column-count);
        @include fixedSpans($screen-sm, $grid-column-count);
        @include fluid();
    }
}

@include mq(md) {
    .md-span {
        @include spans($grid-column-count);
        @include fixedSpans($screen-md, $grid-column-count);
        @include fluid();
    }
}

@include mq(lg) {
    .lg-span {
        @include spans($grid-column-count);
        @include fixedSpans($screen-lg, $grid-column-count);
        @include fluid();
    }
}

@include mq(xl) {
    .xl-span {
        @include spans($grid-column-count);
        @include fixedSpans($screen-xl, $grid-column-count);
        @include fluid();
    }
}

// Span Modifiers
.left {
    order: -1;
}

.right {
    order: 2;
}

.offset-plus {
    @include offset($grid-column-count, left);
}

.offset-negative {
    @include offset($grid-column-count, right);
}

//Offset Breakpoints
@include mq(sm) {
    .sm-offset-plus {
        @include offset($grid-column-count, left);
    }

    .sm-offset-negative {
        @include offset($grid-column-count, right);
    }
}

@include mq(md) {
    .md-offset-plus {
        @include offset($grid-column-count, left);
    }

    .md-offset-negative {
        @include offset($grid-column-count, right);
    }
}

@include mq(lg) {
    .lg-offset-plus {
        @include offset($grid-column-count, left);
    }

    .lg-offset-negative {
        @include offset($grid-column-count, right);
    }
}

@include mq(xl) {
    .xl-offset-plus {
        @include offset($grid-column-count, left);
    }

    .xl-offset-negative {
        @include offset($grid-column-count, right);
    }
}