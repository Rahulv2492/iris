$inputs_background-color: $White;
$inputs_background-color-disabled: $Plaster;
$inputs_background-color-dark: rgba($White, 0.1);
$inputs_background-color-dark-inline-elements: rgba($White, 0.2);
$inputs_border-color: $RegentGray;
$inputs_border-color-dark: $RegentGray;
$inputs_border-color-hover: $AstroGranite;
$inputs_border-color-hover-postive: $Pistachio-Darkened;
$inputs_border-color-hover-error: $SunsetOrange-Darkened;
$inputs_border-color-focused: $AstroGranite;
$inputs_border-color-hover-dark: $White;
$inputs_border-color-focused-dark: $White;
$inputs_border-color-disabled: $Porcelain;
$inputs_inlineInputs_border-color-hover: $AstroGranite;
$inputs_inlineInputs_border-color-focused-hover: $VimeoBlue-Darkened;
$inputs_border-size: 0.0625rem;
$inputs_border-size-focused: 0.125rem;
$inputs_border-style: solid;
$inputs_height-md: 2.5rem;
$inputs_height-lg: 3rem;
$inputs_height-xl: 3.466rem; // 52px
$inputs_margin-bottom: 0.5rem;
$inputs_padding-md: 0.6875rem;
$inputs_padding-lg-horizontal: 0.8125rem;
$inputs_padding-lg-vertical: 0.6875rem;
$input_icon-padding-md: .6875rem .75rem;
$input_icon-padding-lg: .9375rem .8125rem;
$input_icon-padding-xl: .9375rem .8125rem;
$inputs_animation-timing: 300ms;
$inputs_text-color: $BodyTextColor-Dark;
$inputs_text-color-dark: $Porcelain;
$inputs_text-color-disabled: $BodyTextColor-Light;
$inputs_placeholder-color: $SoutherlySky;
$inputs_error-color: $SunsetOrange;
$inputs_positive-color: $Pistachio;
$inputs_inlineInputs_size: 1.25rem;
$inputs_inlineInputs_element-background-color: $VimeoBlue;
$inputs_inlineInputs_element-background-color-hover: $VimeoBlue-Darkened;
$inputs_inlineInputs_fill-color: $White;
$inputs_inlineInputs_fill-size: 0.625rem;
$inputs_icon-size: 1.125rem;
$inputs_icon-size-xl: 1.5rem;
$input_has-icon-padding-md: $inputs_icon-size + 1.125rem;
$input_has-icon-padding-lg: $inputs_icon-size + 1.3125rem;

@mixin inputs_focus_border-shadow($color) {
    box-shadow: inset 0 0 0 rem-calc(1) $color;
}

@mixin inputThemes() {
       // Default Theme Styles ===========================

    &.defaultTheme {
        color: $inputs_text-color;
        background-color: $inputs_background-color;

        &.neutral {
            border-color: $inputs_border-color;
            &:focus,
            &.isFocused {
                @include inputs_focus_border-shadow($inputs_border-color-focused);

                border-color: $inputs_border-color-focused;
            }

            &:hover {
                border-color: $inputs_border-color-hover;
            }
        }
    }

    // DarkTheme Styles ===========================
    &.darkTheme {
        color: $inputs_text-color-dark;
        background-color: $inputs_background-color-dark;

        &.neutral {
            border-color: $inputs_border-color-dark;
            &:focus,
            &.isFocused {
                @include inputs_focus_border-shadow($inputs_border-color-focused-dark);

                border-color: $inputs_border-color-focused-dark;
            }

            &:hover {
                border-color: $inputs_border-color-hover-dark;
            }
        }
    }

    &.positive {
        border-color: $inputs_positive-color;
        &:focus,
        &.isFocused {
            @include inputs_focus_border-shadow($inputs_positive-color);
        }
        &:hover {
            border-color: $inputs_border-color-hover-postive;
            &:focus,
            &.isFocused {
                border-color: $inputs_positive-color;
            }
        }
    }

    &.negative {
        border-color: $inputs_error-color;
        &:focus,
        &.isFocused {
            @include inputs_focus_border-shadow($inputs_error-color);
        }
        &:hover {
            border-color: $inputs_border-color-hover-error;

            &:focus,
            &.isFocused {
                border-color: $inputs_error-color;
            }
        }
    }

    &:disabled,
    &:disabled:hover,
    &.isDisabled,
    &.isDisabled:hover {
        color: $inputs_text-color-disabled;
        border-color: $inputs_border-color-disabled !important; // important ensures that diabled trumps other states, even when their multi-class specificity would trump it.
        background-color: $inputs_background-color-disabled;
    }
}

// shared input styles

@mixin sharedInputBaseStyles() {
    display: inline-block;

    margin: 0 0 $inputs_margin-bottom 0;

    border-width: $inputs_border-size;
    border-style: $inputs_border-style;
    border-radius: rem-calc($g-radius);
    box-shadow: inset 0 0 0 0 #FFFFFF;

    transition: all $inputs_animation-timing ease-out;

    &:focus {
        outline: 0;
    }

    @include inputThemes();
 
}



@mixin sharedTextInputs() {
    width: 100%;

    font-family: $FontFamily;
}


@mixin sharedInputMediumStyles() {
    height: $inputs_height-md;
    padding: $inputs_padding-md;

    font-size: rem-calc(14);
    line-height: calculateLineHeightTarget(14, 16);
}

@mixin sharedInputLargeStyles() {
    height: $inputs_height-lg;
    padding: $inputs_padding-lg-vertical $inputs_padding-lg-horizontal;

    font-size: rem-calc(16);
    line-height: calculateLineHeightTarget(16, 20);
}

@mixin sharedInputXLStyles() {
    height: $inputs_height-xl;
    padding: $inputs_padding-lg-vertical $inputs_padding-lg-horizontal;

    font-size: rem-calc(16);
    line-height: calculateLineHeightTarget(16, 20);
}

// shared styles for inline input elements like checkboxes and radios
@mixin sharedInlineInputWrapperStyles() {
    display: flex;

    position: relative;

    width: 100%;
    margin-bottom: spacingUnit(2);

    flex-wrap: wrap;
}

@mixin sharedInlineInputWrapperDisabledStyles() {
    opacity: 0.5;
}


@mixin sharedInlineInputStyles() {
    display: inline-flex;

    position: absolute;
    z-index: get-z-index('InlineInputs');
    top: $inputs_inlineInputs_size/2;
    left: $inputs_inlineInputs_size/2;

    width: rem-calc(1);
    height: rem-calc(1);
    margin: 0;

    appearance: none;
    align-items: center;
    justify-content: center;

    // states

    &:focus {
        outline: 0;
    }
}


@mixin sharedInlineInputMediumBeforeStyles() {
    width: $inputs_inlineInputs_size;
    height: $inputs_inlineInputs_size;
}

@mixin sharedInlineInputMediumAfterStyles() {
    width: $inputs_inlineInputs_size;
    height: $inputs_inlineInputs_size;
}

@mixin sharedInlineInputFillStyles() {
    position: absolute;

    content: '';
    transition: all 200ms ease-out;
    transform: scale(0);
}

@mixin sharedInlineInputActivatedFillStyles() {
    transform: scale(1);
}

@mixin sharedInlineInputElementReplaceStyles() {
    display: block;

    position: absolute;
    z-index: get-z-index('InlineInputsReplacementElements');
    top: 0;
    left: 0;

    width: $inputs_inlineInputs_size;
    height: $inputs_inlineInputs_size;

    border-width: rem-calc(1);
    border-style: solid;


    &.defaultTheme {
        border-color: $inputs_border-color;
        background-color: $White;

        &:hover {
            border-color: $inputs_inlineInputs_border-color-hover;
        }
    }

    &.darkTheme {
        border-color: $inputs_border-color-dark;

        &:hover {
            border-color: $inputs_border-color-hover-dark;
        }
    }
}

@mixin sharedInlineInputMediumFillStyles() {
    top: rem-calc(4);
    left: rem-calc(4);

    width: $inputs_inlineInputs_fill-size;
    height: $inputs_inlineInputs_fill-size;
}
